
package emergencias_medicas.ui;

import emergencias_medicas.Afiliado;
import emergencias_medicas.Gestor;
import emergencias_medicas.Pago;
import emergencias_medicas.Persona;
import excepciones.ObjInexistenteExcepcion;
import java.awt.Frame;
import java.util.Calendar;
import javax.swing.JOptionPane;


public class EstablecerPago extends javax.swing.JInternalFrame {

    private Gestor gestor;
    private Frame principal;
    private Afiliado afiliado;
    /**
     * Creates new form EstablecerPago
     */
    public EstablecerPago(Gestor gestor) {
        this.gestor=gestor;
        initComponents();
                                                    
//        Integer dia= Integer.decode(this.txtDia.getText());
//        Integer mes= Integer.decode(this.txtMes.getText());
//        Integer año= Integer.decode(this.txtAño.getText());
//        
//        this.afiliado.setNombre(this.jTextField1.getText()); 
//        
//        if(dia>31){
//            JOptionPane.showMessageDialog(rootPane, "Error en el numero ingresado");
//        }    
//        else if ((dia>30&&(mes==4||mes==6||mes==9||mes==11))||(dia>28&&mes==2)){
//            JOptionPane.showMessageDialog(rootPane, "Error en el numero ingresado");
//        }
//        else{
            //Calendar cal = Calendar.getInstance();
        
            //DateFormat formato= new SimpleDateFormat("yyyy-MM-dd");
        
            //String fecha = formato.format(cal.getTime());
        
//            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//        
//
//        try{
//            Date fechaPago= dateFormat.parse(this.txtAño.getText()+"-"+this.txtMes.getText()+"_"+this.txtDia.getText());
//            this.afiliado.setFechaUltPago(fechaPago);
//            
//            
//        }catch(ParseException e){
//            JOptionPane.showMessageDialog(rootPane, "Fecha no establecida");
//        };
        

        //this.afiliado.setNombre(this.jTextField1.getText());
      //  Calendar cal = Calendar.getInstance();
        //this.afiliado.setFechaUltPago(cal);
        //this.dispose();
        
//        DateFormat formato= new SimpleDateFormat("yyyy-MM-dd");
//        
//        String fecha = formato.format(cal.getTime());
//        
//        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//        
//        System.out.println("Dia elegido :" + cal.get(Calendar.DAY_OF_MONTH));
        
        
            
//        }
        
    
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        botonAceptar = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblDeuda = new javax.swing.JLabel();

        setClosable(true);

        jLabel1.setText("Documento");

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jLabel4.setText("Total a pagar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonAceptar)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(61, 61, 61)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCalcular)
                    .addComponent(botonBuscar))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(lblDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscar))
                .addGap(31, 31, 31)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(lblDeuda, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalcular)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(25, 25, 25)
                .addComponent(botonAceptar)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        BuscarAfiliado buscar = new BuscarAfiliado(principal, true, this.jTextField1, gestor);
        buscar.setVisible(true);
        this.setNombreAfiliado();
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        String documento= jTextField1.getText();
        Calendar cal = Calendar.getInstance();
        Integer año= cal.get(Calendar.YEAR);
        Integer mes= cal.get(Calendar.MONTH);
        try{
            for (int i = 0; i < gestor.getPersonas().size(); i++)
            {
                Persona persona=(Persona) gestor.getPersonas().get(i);
                if(persona instanceof Afiliado){
                    if(persona.getDni().equals(documento)){
                        Afiliado afi=(Afiliado) gestor.getPersonas().get(i);
                        int tam= afi.pagos.size()-1;
                        int mesAlta= afi.getFechaAlta().get(Calendar.MONTH);
                        if(año==afi.getFechaAlta().get(Calendar.YEAR)){
                            int difMeses= cal.get(Calendar.MONTH)-mesAlta;
                            //gestor.calcularPago(afi);
                            if(difMeses!=tam){
                                Pago pago=new Pago(cal,gestor.calcularPago(afi));
                                afi.pagos.add(pago);
                                JOptionPane.showMessageDialog(rootPane, "Pago realizado", "Transacción correcta",1);
                            }else
                                JOptionPane.showMessageDialog(rootPane, "Ya realizó el pago correspondiente al mes actual", "Alerta",0);
  
                        }else{
                            int calculoMeses= 11-mesAlta;
                            int difMeses=calculoMeses+cal.get(Calendar.MONTH)+1;
                        
                            if(difMeses!=tam){
                                Pago pago=new Pago(cal,gestor.calcularPago(afi));
                                afi.pagos.add(pago);
                                JOptionPane.showMessageDialog(rootPane, "Pago realizado", "Transacción correcta",1);
                            }else
                                JOptionPane.showMessageDialog(rootPane, "Ya realizó el pago correspondiente al mes actual", "Alerta",0);
                        }
                    }
                }
            } 
        }catch (ObjInexistenteExcepcion ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Alerta", 0);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(rootPane, "No realizó selección", "Alerta", 0);
        }
        
   
        this.dispose();

    }//GEN-LAST:event_botonAceptarActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        this.botonAceptar.setEnabled(true);
        Calendar cal = Calendar.getInstance();
        Integer año= cal.get(Calendar.YEAR);
        Integer mes= cal.get(Calendar.MONTH);
        
        String documento= jTextField1.getText();
        
        for (int i = 0; i < gestor.getPersonas().size(); i++)
        {
            Persona persona=(Persona) gestor.getPersonas().get(i);
            if(persona instanceof Afiliado){
                if(persona.getDni().equals(documento)){
                    Afiliado afi=(Afiliado) gestor.getPersonas().get(i);
                    int tam= afi.pagos.size()-1;
                    int mesAlta= afi.getFechaAlta().get(Calendar.MONTH);
                    if(año==afi.getFechaAlta().get(Calendar.YEAR)){
                        int difMeses= cal.get(Calendar.MONTH)-mesAlta;
                        this.lblDeuda.setText("Adeuda "+(difMeses-tam)+" mes(es)");
                        
                        if(difMeses!=tam)
                            this.jLabel3.setText(Float.toString(gestor.calcularPago(afi)));
                        else
                            this.botonAceptar.setEnabled(false);
                        
                    }else{                              //si es distinto el año
                        int calculoMeses= 11-mesAlta;
                        int difMeses=calculoMeses+cal.get(Calendar.MONTH)+1;
                        this.lblDeuda.setText("Adeuda "+(difMeses-tam)+" mes(es)");
                        
                        if(difMeses!=tam)
                            this.jLabel3.setText(Float.toString(gestor.calcularPago(afi))); 
                        else
                            this.botonAceptar.setEnabled(false);
                    }    
                }
            }
        }
    }//GEN-LAST:event_btnCalcularActionPerformed

    
    private void setNombreAfiliado() {
        Afiliado afiliado=null;
        try {
            afiliado = (Afiliado)gestor.getPersona(this.jTextField1.getText().trim());
            
            this.jLabel2.setText(String.valueOf(afiliado.getDni()));
        } catch (ObjInexistenteExcepcion ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Alerta", 0);
        }catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(rootPane, "No realizó selección", "Alerta", 0);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblDeuda;
    // End of variables declaration//GEN-END:variables
}
